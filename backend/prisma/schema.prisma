generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model competitions {
  id                Int       @id @default(autoincrement())
  date              DateTime  @db.Date
  type              String    @db.VarChar(50)
  club              String?   @db.VarChar(100)
  handicapallowance String?   @db.VarChar(10)
  joincode          String?   @db.VarChar(20)
  notes             String?
  groups            Json?
  course_id         Int?
  created_at        DateTime? @default(now()) @db.Timestamp(6)
  fourballs         String?   @db.VarChar(10) // <-- Add this line
  status            String    @default("Open") @db.VarChar(20)
  holes             holes[]
  scores            scores[]
  teams             teams[]
}

model holes {
  id             Int           @id @default(autoincrement())
  competition_id Int?
  number         Int
  par            Int
  stroke_index   Int
  competitions   competitions? @relation(fields: [competition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  scores         scores[]
}

model scores {
  id             Int           @id @default(autoincrement())
  competition_id Int?
  team_id        Int?
  user_id        Int?
  hole_id        Int?
  strokes        Int?
  points         Int?
  competitions   competitions? @relation(fields: [competition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  holes          holes?        @relation(fields: [hole_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teams          teams?        @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users          users?        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  @@unique([competition_id, team_id, user_id, hole_id])
}

model team_members {
  id              Int     @id @default(autoincrement())
  team_id         Int?
  user_id         Int?
  teebox          String? @db.VarChar(20)
  course_handicap Int?
  users           users?  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model teams {
  id             Int           @id @default(autoincrement())
  competition_id Int?
  name           String?       @db.VarChar(100)
  players        String[]
  scores         scores[]
  team_points    Int? 
  competitions   competitions? @relation(fields: [competition_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  teams_users    teams_users[]
}

model teams_users {
  id              Int      @id @default(autoincrement())
  team_id         Int?
  user_id         Int?
  teebox          String?  @db.VarChar(20)
  course_handicap Decimal? @db.Decimal(4, 1)
  waters          Int?     @default(0)
  dog             Boolean? @default(false)
  two_clubs       Int?     @default(0)
  fines           Int?     @default(0)
  teams           teams?   @relation(fields: [team_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users           users?   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([team_id, user_id])
}

model users {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  username     String         @unique @db.VarChar(50)
  password     String         @db.VarChar(100)
  isadmin      Boolean?       @default(false)
  scores       scores[]
  team_members team_members[]
  teams_users  teams_users[]
}
